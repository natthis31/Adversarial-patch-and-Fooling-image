import random, torchvision.transforms as T
from torchvision.utils import save_image
from PIL import Image
val_tf = T.Compose([T.Resize(256),T.CenterCrop(224),T.ToTensor(),
                    T.Normalize([0.485,0.456,0.406],[0.229,0.224,0.225])])

IMG_PATH = "flower.jpg"                 # 事前にアップロード
orig = val_tf(Image.open(IMG_PATH).convert("RGB")).unsqueeze(0).to(device)

PH, STEPS, LR = int(224*0.4), 2000, 0.3
patch = torch.rand(1,3,PH,PH, device=device, requires_grad=True)
opt   = torch.optim.Adam([patch], lr=LR)
target = torch.tensor([0], device=device)      # 0 = Car

for s in range(STEPS):
    x = orig.clone()
    i,j = random.randrange(224-PH), random.randrange(224-PH)
    x[:,:,i:i+PH,j:j+PH] = torch.sigmoid(patch)
    loss = -loss_fn(net(x), target)
    opt.zero_grad(); loss.backward(); opt.step()
    patch.data.clamp_(0,1)
    if s%400==0: print("step",s)

adv = orig.clone()
adv[:,:,i:i+PH,j:j+PH] = torch.sigmoid(patch).detach()
save_image(adv.cpu(), "adversarial_flower.png"); print("✅ adversarial_flower.png")
